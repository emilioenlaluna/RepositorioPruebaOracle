Inicialiar repositorio
git init

Track Monitorear archivos rastrear
git add .
git add index.html

Desmonitorear archvis

git rm --cache index.html

Hacer un commit

git commit -m "Cambios XXX"

--Configurar usuario

git config --global user.name "XXX"

git config --global user.email "xxx@xxx.xxx"
--local


HEAD: Estado actual de nuestro código, es decir, donde nos colocó Git
Working tree: Lugar donde los archivos realmente están siendo almacenados
index: Lugar donde Git almacena lo que será commiteado, es decir, la ubicación entre el working tree y el repositorio de Git en sí.



git status -s


Ignorar Archivos

# ignora los archivos terminados en .a
*.a

# pero no lib.a, aun cuando había ignorado los archivos terminados en .a en la línea anterior
!lib.a

# ignora unicamente el archivo TODO de la raiz, no subdir/TODO
/TODO

# ignora todos los archivos del directorio build/
build/

# ignora doc/notes.txt, pero no este: doc/server/arch.txt
doc/*.txt

# ignora todos los archivos .txt del directorio doc/
doc/**/*.txt

git diff

 git diff --staged


  git diff --cached para ver que has preparado hasta ahora (--staged y --cached son sinónimos):

Eliminar archivo  git rm PROJECTS.md


git log
git log --oneline
git log -p
git log -p --max-count=2

-n, --max-count=2
    --skip=2
    --since="1 week ago"
    --until="yesterday"
    --author="Rico"
    --committer="Rico"


    git log master             # branch
git log origin/master      # branch, remote
git log v1.0.0             # tag


Ordering
    --date-order
    --author-date-order
    --topo-order              # "smart" ordering
    --reverse


Pretty

  --pretty="format:%H"

  $ git log   --pretty="format:%H %s"
  
$ git log   --pretty="format:%H %s %ae"

https://devhints.io/git-log




git init --bare


listar los servidores remotos


git remote


 git remote add servidorlocal  C:/Users/emili/Documents/remotogitalura/

git remote add nombre-repositorio camino/del/repositorio


emili@LAPTOP-Q6LOO1V1 MINGW64 ~/Documents/OracleOneGitGitHub (master)
$ git remote
servidorlocal


$ git remote -v
servidorlocal   C:/Users/emili/Documents/remotogitalura/ (fetch)
servidorlocal   C:/Users/emili/Documents/remotogitalura/ (push)



$ git clone /c/Users/emili/Documents/remotogitalura/
$ git clone /c/Users/emili/Documents/remotogitalura/ proyecto



agregar los cambios al servidor 

 git push servidorlocal master
 git push <remote> <rama/branch>


//origin es el nombre que le da git cuando copias un repositorio

renombrar un origin remote

git remote rename origin local
git remote rename local servidorlocal


//////////////////
 extreaer datos del serivore local

git pull servidorlocal master


